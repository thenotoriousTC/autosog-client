-- These are SQL functions you can run in the Supabase SQL Editor if needed

-- Function to create profiles table
CREATE OR REPLACE FUNCTION create_profiles_table() 
RETURNS void 
LANGUAGE plpgsql
AS $$
BEGIN
  -- Check if the table exists, if not create it
  IF NOT EXISTS (SELECT FROM pg_tables WHERE tablename = 'profiles') THEN
    CREATE TABLE profiles (
      id UUID PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,
      email TEXT,
      first_name TEXT,
      last_name TEXT,
      avatar_url TEXT,
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
      updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
    );

    -- Set up Row Level Security
    ALTER TABLE profiles ENABLE ROW LEVEL SECURITY;
    
    -- Create policies
    CREATE POLICY "Public profiles are viewable by everyone."
      ON profiles FOR SELECT USING (true);
      
    CREATE POLICY "Users can insert their own profile."
      ON profiles FOR INSERT WITH CHECK (auth.uid() = id);
      
    CREATE POLICY "Users can update their own profile."
      ON profiles FOR UPDATE USING (auth.uid() = id);
  END IF;
END;
$$;

-- Function for admin to approve car listings
CREATE OR REPLACE FUNCTION approve_car_listing(listing_id UUID)
RETURNS void
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
  UPDATE car_listings 
  SET status = 'approved'
  WHERE id = listing_id;
END;
$$;

-- Function for admin to reject car listings
CREATE OR REPLACE FUNCTION reject_car_listing(listing_id UUID)
RETURNS void
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
  UPDATE car_listings 
  SET status = 'rejected'
  WHERE id = listing_id;
END;
$$; 